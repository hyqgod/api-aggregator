## ---
## Mininal configuration to have Nginx+LUA (Openresty) to acts as sandbox that run lua based api 
## aggregation scripts
## ---

worker_processes  2;
error_log logs/error.log warn;
events { worker_connections 256; }

http {
  
  ## upstream of your api
  ## this one assumes you have the SentimentAPI (https://github.com/solso/sentiment-api-example) 
  ## running on port 8080
  upstream api-backend {
    server localhost:8080 max_fails=5 fail_timeout=30;
  }
   
  server {
    ## the port of your sandboxed nginx
    listen 8090;
    server_name api-sentiment.3scale.net;

    ## for each api aggregation lua script you need a localtion, which will be the end-point used
    ## by the API consumers, e.g. GET /aggr/positive_word/SENTENCE.json
    location ~ ^/aggr/positive_word/ {
      ## CHANGEME
      ## you must define full path to the user_scripts directory
      ## set $lua_user_scripts_path "/path/to/api-aggregator/sandbox/lua/user_scripts/";
      set $lua_user_scripts_path "/Users/solso/3scale/api-aggregator/sandbox/lua/user_scripts/";
      set $function_to_call_file "positive_word.lua";
      access_by_lua_file lua/tools/utils_sandbox.lua;
    }
    
    ## whatever is not /aggr (prefix for api aggregations) will be send to the api-backend
    location / {
      internal;
      proxy_pass http://api-backend;
    }
  }
}

